name: rust_commerce

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: rust-commerce-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: rust_commerce
    volumes:
      - mongodb_data:/data/db
    networks:
      - rust-commerce
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  # NATS Message Broker
  nats:
    image: nats:latest
    container_name: rust-commerce-nats
    restart: unless-stopped
    ports:
      - "4222:4222"  # Client connections
      - "6222:6222"  # Cluster connections
      - "8222:8222"  # HTTP monitoring
    command: ["--http_port", "8222"]
    networks:
      - rust-commerce

  # Catalog Service
  catalog-service:
    build:
      context: .
      dockerfile: catalog/Dockerfile
    container_name: rust-commerce-catalog-service
    restart: unless-stopped
    environment:
      - RUST_ENV=local
      - MONGODB_URL=mongodb://admin:password123@rust-commerce-mongodb:27017/?authSource=admin
      - NATS_URL=nats://rust-commerce-nats:4222
      - RUST_LOG=debug
      - RUST_LOG_STYLE=always
      - RUST_BACKTRACE=1
      - LOG_LEVEL=debug
    depends_on:
      mongodb:
        condition: service_healthy
      nats:
        condition: service_started
    networks:
      - rust-commerce

  # Inventory Service
  inventory-service:
    build:
      context: .
      dockerfile: inventory/Dockerfile
    container_name: rust-commerce-inventory-service
    restart: unless-stopped
    environment:
      - RUST_ENV=local
      - MONGODB_URL=mongodb://admin:password123@rust-commerce-mongodb:27017
      - NATS_URL=nats://rust-commerce-nats:4222
      - RUST_LOG=debug
      - RUST_LOG_STYLE=always
      - RUST_BACKTRACE=1
      - LOG_LEVEL=debug
      - LOG_LEVEL=info
    depends_on:
      mongodb:
        condition: service_healthy
      nats:
        condition: service_started
    networks:
      - rust-commerce

  # Orders Service
  orders-service:
    build:
      context: .
      dockerfile: orders/Dockerfile
    container_name: rust-commerce-order-service
    restart: unless-stopped
    environment:
      - RUST_ENV=local
      - MONGODB_URL=mongodb://admin:password123@rust-commerce-mongodb:27017
      - NATS_URL=nats://rust-commerce-nats:4222
      - RUST_LOG=debug
      - RUST_LOG_STYLE=always
      - RUST_BACKTRACE=1
      - LOG_LEVEL=debug
    depends_on:
      mongodb:
        condition: service_healthy
      nats:
        condition: service_started
    networks:
      - rust-commerce

  # Price Service
  price-service:
    build:
      context: .
      dockerfile: price/Dockerfile
    container_name: rust-commerce-price-service
    restart: unless-stopped
    environment:
      - RUST_ENV=local
      - MONGODB_URL=mongodb://admin:password123@rust-commerce-mongodb:27017
      - NATS_URL=nats://rust-commerce-nats:4222
      - RUST_LOG=debug
      - LOG_LEVEL=debug
    depends_on:
      mongodb:
        condition: service_healthy
      nats:
        condition: service_started
    networks:
      - rust-commerce

networks:
  rust-commerce:
    name: rust-commerce
    driver: bridge

volumes:
  mongodb_data:
    driver: local
